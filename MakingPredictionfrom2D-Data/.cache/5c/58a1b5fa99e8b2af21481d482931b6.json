{"id":"node_modules/vega-lite/build/src/compile/scale/component.js","dependencies":[{"name":"/home/bs278/Documents/Tensorflow-JS/MakingPredictionfrom2D-Data/node_modules/vega-lite/build/src/compile/scale/component.js.map","includedInParent":true,"mtime":1547364137000},{"name":"/home/bs278/Documents/Tensorflow-JS/MakingPredictionfrom2D-Data/package.json","includedInParent":true,"mtime":1558528544688},{"name":"/home/bs278/Documents/Tensorflow-JS/MakingPredictionfrom2D-Data/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1547364136000},{"name":"../split","loc":{"line":1,"column":22},"parent":"/home/bs278/Documents/Tensorflow-JS/MakingPredictionfrom2D-Data/node_modules/vega-lite/build/src/compile/scale/component.js","resolved":"/home/bs278/Documents/Tensorflow-JS/MakingPredictionfrom2D-Data/node_modules/vega-lite/build/src/compile/split.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScaleComponent = void 0;\n\nvar _split = require(\"../split\");\n\nclass ScaleComponent extends _split.Split {\n  constructor(name, typeWithExplicit) {\n    super({}, // no initial explicit property\n    {\n      name // name as initial implicit property\n\n    });\n    this.merged = false;\n    this.domains = [];\n    this.setWithExplicit('type', typeWithExplicit);\n  }\n\n}\n\nexports.ScaleComponent = ScaleComponent;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":10,"column":6}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":10,"column":20}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":18,"column":36},"generated":{"line":10,"column":29}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":10,"column":41}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":18,"column":62},"generated":{"line":10,"column":42}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":11,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":11,"column":13}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":14},"generated":{"line":11,"column":14}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":11,"column":18}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":28},"generated":{"line":11,"column":20}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":11,"column":36}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":23,"column":65},"generated":{"line":11,"column":38}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":12,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":12,"column":10}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":12,"column":12}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":25,"column":10},"generated":{"line":12,"column":14}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":13,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":26,"column":7},"generated":{"line":14,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":26,"column":7},"generated":{"line":14,"column":6}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":14,"column":10}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":14,"column":11}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":16,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":16,"column":5}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":17,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":17,"column":15}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":19,"column":18},"generated":{"line":17,"column":18}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":17,"column":23}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":18,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":18,"column":9}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":18,"column":16}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":21,"column":39},"generated":{"line":18,"column":19}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":18,"column":21}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":19,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":19,"column":24}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":28,"column":25},"generated":{"line":19,"column":25}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":19,"column":31}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":28,"column":33},"generated":{"line":19,"column":33}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":19,"column":49}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":29,"column":3},"generated":{"line":20,"column":0}},{"source":"../../../../src/compile/scale/component.ts","name":null,"original":{"line":18,"column":62},"generated":{"line":22,"column":0}}],"sources":{"../../../../src/compile/scale/component.ts":"import {ScaleChannel} from '../../channel';\nimport {Scale, ScaleType} from '../../scale';\nimport {Omit} from '../../util';\nimport {VgNonUnionDomain, VgRange, VgScale} from '../../vega.schema';\nimport {SignalRefComponent} from '../signal';\nimport {Explicit, Split} from '../split';\n\n/**\n * All VgDomain property except domain.\n * (We exclude domain as we have a special \"domains\" array that allow us merge them all at once in assemble.)\n */\n// TODO: also exclude domainRaw and property implement the right scaleComponent for selection domain\n\nexport type ScaleComponentProps = Omit<VgScale, 'domain' | 'range'> & {\n  range: VgRange<SignalRefComponent>;\n};\n\nexport class ScaleComponent extends Split<ScaleComponentProps> {\n  public merged = false;\n\n  public domains: VgNonUnionDomain[] = [];\n\n  constructor(name: string, typeWithExplicit: Explicit<ScaleType>) {\n    super(\n      {}, // no initial explicit property\n      {name} // name as initial implicit property\n    );\n    this.setWithExplicit('type', typeWithExplicit);\n  }\n}\n\n// Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\nexport type ScaleComponentIndex = {[P in ScaleChannel]?: ScaleComponent};\n\nexport type ScaleIndex = {[P in ScaleChannel]?: Scale};\n"},"lineCount":null}},"error":null,"hash":"b466c67bfb880b73d1299de680140b6a","cacheData":{"env":{}}}
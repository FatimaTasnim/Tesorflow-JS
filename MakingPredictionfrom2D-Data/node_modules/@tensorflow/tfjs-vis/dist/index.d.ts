import { barchart } from './render/barchart';
import { confusionMatrix } from './render/confusion_matrix';
import { heatmap } from './render/heatmap';
import { histogram } from './render/histogram';
import { linechart } from './render/linechart';
import { scatterplot } from './render/scatterplot';
import { table } from './render/table';
import { fitCallbacks, history } from './show/history';
import { layer, modelSummary } from './show/model';
import { showPerClassAccuracy } from './show/quality';
import { valuesDistribution } from './show/tensor';
import { accuracy, confusionMatrix as metricsConfusionMatrix, perClassAccuracy } from './util/math';
declare const render: {
    barchart: typeof barchart;
    table: typeof table;
    histogram: typeof histogram;
    linechart: typeof linechart;
    scatterplot: typeof scatterplot;
    confusionMatrix: typeof confusionMatrix;
    heatmap: typeof heatmap;
};
declare const metrics: {
    accuracy: typeof accuracy;
    perClassAccuracy: typeof perClassAccuracy;
    confusionMatrix: typeof metricsConfusionMatrix;
};
declare const show: {
    history: typeof history;
    fitCallbacks: typeof fitCallbacks;
    perClassAccuracy: typeof showPerClassAccuracy;
    valuesDistribution: typeof valuesDistribution;
    layer: typeof layer;
    modelSummary: typeof modelSummary;
};
export { visor } from './visor';
export { render };
export { metrics };
export { show };
export * from './types';
